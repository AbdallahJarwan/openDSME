/*
 * openDSME
 *
 * Implementation of the Deterministic & Synchronous Multi-channel Extension (DSME)
 * described in the IEEE 802.15.4-2015 standard
 *
 * Authors: Florian Kauer <florian.kauer@tuhh.de>
 *          Maximilian Koestler <maximilian.koestler@tuhh.de>
 *          Sandrina Backhauss <sandrina.backhauss@tuhh.de>
 *
 * Based on
 *          DSME Implementation for the INET Framework
 *          Tobias Luebkert <tobias.luebkert@tuhh.de>
 *
 * Copyright (c) 2015, Institute of Telematics, Hamburg University of Technology
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. Neither the name of the Institute nor the names of its contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE INSTITUTE AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE INSTITUTE OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 */

#include "./NeuralNetwork.h"

namespace dsme {

/******** Layer 0 ********/
static const float l0_weights_array[180] {
    3.28686357,-6.60751534,18.27993774,-4.38394737,7.45283031,-6.34539938,8.29773808,1.28397536,-0.44165745,
    -2.09235454,10.17171764,-0.29731080,4.34629250,0.04323474,-1.65516222,-2.02395630,-13.66309738,-19.82764816,
    -1.33757508,1.23340607,0.31969661,0.44177559,1.31175375,0.00150924,-0.81445479,-2.95475459,0.86722904,
    -0.71054429,-3.37334299,0.44136533,1.40178263,-0.06935494,1.36468136,0.14084020,-0.72143179,-0.11643556,
    3.96984696,-1.40036988,1.44658637,-5.04639912,9.07392120,3.18620443,-2.85584879,2.82940364,1.74509978,
    0.45618731,2.26383829,-1.24067819,-0.68556345,0.98116916,-2.30314445,0.70134467,0.87751943,-0.98441899,
    1.62807798,-1.69480038,0.28707564,-0.97291952,-0.47319236,3.30663252,-2.16489792,4.23153925,-2.49766254,
    -1.09251070,-0.49898112,0.19952258,-1.01300395,-0.50885141,1.52191174,0.50866252,-0.08013703,-0.14071240,
    -1.48091018,-3.00259924,0.97407794,-16.04104996,0.14437896,-0.35416624,-2.23812103,0.61051869,0.11352920,
    1.12932146,-5.97969246,2.09629965,0.49983758,-4.43446064,-6.06906414,-9.02161503,2.39345503,3.72602034,
    -0.27845317,0.74207169,-0.29384094,0.00923330,4.09196377,2.58725023,7.27908850,-2.25934672,0.47330230,
    -2.28799295,1.77840292,-3.53723192,1.34677029,-2.12110138,2.65964127,-1.86546457,0.17209861,-0.62615854,
    -2.52299929,1.28054976,-1.15688264,2.72716713,0.11047900,-1.09052396,-0.79699284,-3.85745811,-1.95748997,
    -1.58828962,1.98571718,0.64491600,2.50931358,1.90392518,-0.56119233,-3.79771805,-0.52618140,-2.26338005,
    -1.45327759,-2.96601558,-1.69396436,-0.08274952,2.12748122,3.47890139,-2.01225138,-0.30303791,-5.80524206,
    -0.32968271,-1.64596450,-0.04309166,-0.63190305,1.16952312,-0.05520463,1.75997663,-0.93034220,1.19425631,
    -0.77024913,-0.01234830,3.68940330,-0.98102134,-0.84282941,4.67731762,-2.18266368,-1.37437654,1.83516073,
    -1.87320125,2.88821507,1.92896819,-1.11905813,-3.40487146,4.82457352,-0.52505445,-1.04305148,0.84458756,
    -0.87872022,-1.42290986,-0.60220701,-14.73615932,1.05283594,-2.09680486,-14.30106354,-0.13109359,1.17743504,
    -1.35911107,-3.95494151,-0.51341540,1.09856689,1.40083289,2.15036154,-0.16284928,-0.52645862,-2.93609715,
};
static float l0_bias_array[20] {
    -4.28432322,-4.23636389,-0.92187142,0.18364894,-7.97443151,0.62882411,0.50567806,2.07737780,3.40841722,2.09512734,-5.02477503,3.42560196,3.92960596,-2.00149894,2.62999678,-0.17002602,-1.83513927,2.33607984,1.53977799,2.27272105
};
static float l0_output_array[20];

static const quicknet::matrix_t l0_weights{20,9,l0_weights_array};
static const quicknet::vector_t l0_bias{20,l0_bias_array};
static quicknet::vector_t l0_output{20,l0_output_array};

/******** Layer 1 ********/
static const float l1_weights_array[400] {
    -0.88539076,-0.84005332,1.17643261,1.04239392,-0.30647787,0.99590474,0.45864114,0.43785211,0.45049211,0.05487302,-0.06306154,-1.71317255,0.10897735,1.54084766,1.00748134,0.14656219,0.65706015,-0.39524433,-0.16210890,-1.69893932,
    -0.35956118,-0.06273119,1.75382268,0.88583887,-0.58391190,0.45415199,0.45948902,0.84067237,-0.64496756,0.32409403,0.43821117,-1.06914961,0.26316732,-0.36377886,1.59035540,-0.58187556,0.53716701,-0.63779658,0.71676081,-2.33077836,
    0.16312639,1.56868684,1.24155784,-0.76992929,-0.07435211,-0.25448382,-0.00531150,1.13371360,-1.75075793,0.90422213,1.22097039,0.25249144,0.35931075,-3.81831074,-0.48396912,-1.18383670,0.06505887,-0.35897839,0.98659188,1.16647613,
    0.17647502,1.20920742,3.08109951,-0.56580406,-0.35533762,-0.55376953,0.29620960,0.60624963,-1.00543022,0.51505649,0.49103969,0.36756110,-0.09308529,-3.55459619,1.40374267,-0.65891260,0.32176939,-0.89748091,0.64775497,-1.09288716,
    -0.00533936,-0.00272575,0.08855174,0.19279914,0.01110842,0.15327097,0.03240052,0.00994041,0.01167201,-0.01882396,-0.02429780,-0.01608311,0.02804453,-0.01801037,0.12907204,0.01678468,0.04888359,-0.02380871,-0.05278416,-0.23042384,
    0.20251669,-0.05861906,-1.71220398,-0.26135123,0.56937015,0.12147470,-0.63976061,-0.03001379,-0.23570076,0.01488143,-0.08185355,0.15020446,0.66631430,0.66611165,-0.78763264,0.13967320,0.08587468,0.10952327,0.06784978,1.16197515,
    0.68580300,0.56944269,1.33703303,-0.81987363,-0.17292175,-1.14090323,-0.40208235,-0.57545632,0.19685338,0.14544424,0.30878881,1.51541507,-1.05066121,-1.92380118,0.79695904,-0.43399397,-0.81301224,0.25522697,-0.52056074,-0.28976810,
    0.01444978,-0.00459317,-0.02489508,-0.07568916,-0.01265102,-0.06873896,0.00456762,-0.02740924,0.01559378,0.00026773,0.00489260,0.03556611,-0.02109385,-0.01616421,-0.03896880,0.00664570,-0.03075153,0.01820955,0.00935809,0.07250196,
    0.01877298,0.00552119,-0.05396059,-0.14482848,-0.02714981,-0.12779132,0.02204568,-0.05624193,0.02623765,0.00757004,0.01353955,0.04478056,-0.03703388,-0.02334994,-0.07719696,0.00557220,-0.05656519,0.03613410,0.00925918,0.14540517,
    0.01209454,0.00062774,-0.00522900,0.00088040,0.00687852,-0.00580506,0.00944055,0.00204437,0.01244705,0.00173205,0.00382138,0.00903681,0.01319382,0.00132120,0.00589662,0.00645787,-0.00093306,0.00516154,0.00389846,0.02855471,
    0.28989133,0.30007172,2.91874552,-1.05015063,-0.52473867,-1.06762421,1.00624824,-0.35803947,0.73356080,0.26248288,0.46535403,0.79167080,-1.79185021,-0.13993837,-0.48342690,-0.14496887,-0.70685178,0.25467613,-0.33242100,0.89725453,
    0.02206853,-0.00924712,-0.02597103,-0.05182710,-0.00054964,-0.04678121,0.01197599,-0.01464239,0.01701872,0.01293694,0.01927052,0.03654527,-0.00677294,0.00389459,-0.02594784,0.00760830,-0.02028493,0.02483791,0.01535824,0.07736039,
    -0.32052368,-1.35442245,1.48624063,-0.37141281,-0.73142588,0.13164921,1.23704123,-1.07805443,1.23365319,-0.26297459,-0.34008488,-0.59282339,-1.19190598,3.11315846,-0.37800446,0.43798265,-0.14814280,0.56834066,-0.81162745,0.70055145,
    0.36920652,0.35269168,2.99684238,-1.26847994,-0.68943948,-0.93928915,0.77577388,-0.84090507,0.36634347,0.14045213,0.04129122,0.65023005,-1.80053353,0.33534607,-0.48237792,0.31492537,-0.58270407,0.39351702,-0.38667786,1.44465446,
    -0.03660817,-0.17392455,1.71053016,-1.14721334,-0.41433281,-0.42393497,0.74344379,-1.09687889,1.02666903,0.22675183,0.18812186,0.35372415,-1.66786623,2.22586012,-1.20800972,0.43920511,-0.64356214,0.81258482,-0.76687860,1.92273593,
    -0.20884532,1.22865009,-1.49154007,0.37351429,0.39299029,0.44400713,-0.63306195,1.18544769,-1.46890974,0.51291811,0.67663139,-0.25675875,1.29546070,-2.17356396,0.24411149,-0.60406327,0.75924039,-0.69224274,1.35179007,-0.58505887,
    -0.00254156,-0.03178306,0.00809468,-0.04738677,-0.00766587,0.00027572,0.06310622,-0.02095303,0.01271543,0.02302884,0.02207240,-0.00892892,0.00463886,-0.01855368,-0.05088981,0.01195251,0.00078866,0.03792946,-0.00942280,0.11742656,
    -0.96093541,-0.52507699,-0.06938764,0.37933150,-0.04593767,0.93370402,0.91031802,0.78631938,-0.82000226,0.48535281,0.61764580,-2.12422967,0.99680459,1.34057939,0.08049095,-0.45934582,0.22573410,0.10872760,0.52456743,-0.04123453,
    0.01104424,0.00691354,-0.01880238,-0.02924266,-0.00585077,-0.03276228,-0.00194156,-0.01488745,0.00573482,-0.00451314,-0.00055619,0.01003992,-0.00624530,-0.00740868,-0.01999087,-0.00519794,-0.01884672,0.00669409,0.00217433,0.04017295,
    -0.19757207,1.50599146,-2.11713386,0.24692704,0.71698737,-0.20353428,-0.50872165,0.87275803,-1.04942977,0.93016583,1.15999389,-0.09249729,1.11164415,-1.47317088,-0.68310714,-0.70830530,0.09924807,-0.29852542,1.47545445,0.55462658,
};
static float l1_bias_array[20] {
    -0.37358251,-0.27661338,-0.50051945,-0.08741071,-0.23026989,-0.25767007,0.98558336,0.08994600,0.13845403,0.02279309,0.02959332,0.08461881,-0.01847799,0.32466280,0.03396670,-0.50199705,-0.01197702,-0.94716454,0.04016609,-0.69802809
};
static float l1_output_array[20];

static const quicknet::matrix_t l1_weights{20,20,l1_weights_array};
static const quicknet::vector_t l1_bias{20,l1_bias_array};
static quicknet::vector_t l1_output{20,l1_output_array};

/******** Layer 2 ********/
static const float l2_weights_array[100] {
    -0.10361529,1.10856009,0.72762597,0.84466684,0.13144897,-0.22003677,0.02936213,-0.10008563,0.03110046,-0.30726871,0.04204365,0.03370973,-0.48065585,-0.32860661,-0.72558147,0.25042015,0.22431034,0.56189597,0.03563060,1.37380302,
    0.07285786,0.64222038,-0.42317906,-0.19072382,0.14059898,-0.21910605,0.05180791,-0.10317401,0.02673472,-0.31564891,-0.42297959,0.02325620,-0.07567543,-0.81566727,-0.91084337,-0.28159988,0.21686950,0.07188553,0.03538821,-0.51236296,
    -0.23867570,-0.40643501,-0.08474822,-0.95946604,0.11525795,-0.21505949,-0.15829869,-0.08665653,0.04207416,-0.29154611,-0.47484848,0.06240015,-0.21084991,-0.93578243,-0.25221029,-0.10122218,0.25280166,0.17523587,0.03895403,0.56661886,
    0.19416453,0.61055773,-0.15672664,-0.34886122,0.14168945,-0.22207437,-0.29472092,-0.09980065,0.02837908,-0.31030536,0.40177450,0.02631407,0.44359547,0.78917366,0.79811734,-0.39120102,0.21198630,1.04422593,0.03569007,-0.32691607,
    -0.46524572,-0.60436839,-0.07223869,-0.16306134,0.11843996,-0.21619125,0.33454001,-0.09075359,0.03857159,-0.29285517,0.63578910,0.05543518,0.06831370,1.71112704,0.83601975,-0.50090289,0.24128495,-0.75788361,0.03737758,-0.33445963,
};
static float l2_bias_array[5] {
    -0.64940077,0.25935113,-0.01009249,-0.20877574,0.36935705
};
static float l2_output_array[5];

static const quicknet::matrix_t l2_weights{5,20,l2_weights_array};
static const quicknet::vector_t l2_bias{5,l2_bias_array};
static quicknet::vector_t l2_output{5,l2_output_array};

/******** Network ********/
static quicknet::Layer layers[3] {
    {l0_weights, l0_bias, l0_output, quicknet::quick_sigmoid},
    {l1_weights, l1_bias, l1_output, quicknet::quick_linear},
    {l2_weights, l2_bias, l2_output, quicknet::quick_softmax},
};

NeuralNetwork::NeuralNetwork() : network{3, layers} {
}

} /* namespace dsme */
